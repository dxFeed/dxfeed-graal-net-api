* [MDAPI-165] [.NET] DxFeed.Graal.Net.Schedules.GetNextSession does not return null if no session exists

## Version 2.5.1

* [MDAPI-124] [.NET] Remove the ability to pass multiple sources for PriceLeveBookSample
  - To work with multiple sources, the MarketDepthModel should be used.

## Version 2.5.0

* [MDAPI-121] [.NET] Publish samples with the release
* [MDAPI-123] [.NET] Add the ability to set Java System Properties
  - Now any Java Properties can be set either through setting environment variables
    or using the dxfeed.system.properties file
  - All properties that are set via environment variables must be prefixed with DXFEED_
  - By default, the dxfeed.system.properties file is looked for in the runtime directory,
    but the path to it can also be set by setting the environment variable
    DXFEED_dxfeed.system.properties=/path/to/file
  - For separate configuration of endpoints with the role of feed, ondemand, publisher,
    dxfeed.properties and dxpublisher.properties files are also used respectively,
    properties set in these files have higher priority than dxfeed.system.properties,
    but only properties related to the endpoint can be set there
  - Example of setting environment variables for Linux and macOS:
    env DXFEED_dxfeed.address=demo.dxfeed.com:7300 ./app
  - Example of setting environment variables for Windows:
    cmd /v/c "set DXFEED_dxfeed.address=demo.dxfeed.com:7300&& app.exe"
  - The configuration sources are applied in the following order, with each successive source
    overwriting values from the previous one:
     1) dxfeed.system.properties
     2) Environment Variables
     3) Direct calls to System.setProperty in source code, in the order in which they were called.
  - The configuration dxfeed.properties and dxpublisher.properties files will be applied exactly as it was before.
    The order is as follows:
    1) System Property Provider (environment var or dxfeed.system.properties file or call System.setProperty)
    2) dxfeed.properties and dxpublisher.properties
    3) Direct call from the endpoint builder (DXEdnpoint.Builder.WithProperty)

* [MDAPI-116] [.NET] Add PriceLevelBookSample

## Version 2.4.1

* [MDAPI-120] [.NET] Current target does not support the CPU features that are required by the image

## Version 2.4.0

* [MDAPI-118] [.NET] IndexedTxModel does not work with Regional and Composite sources
* [MDAPI-112] [.NET] Add LastEventsConsole API sample
* [MDAPI-42] [.NET] Implement OptionChain

## Version 2.3.0

* [MDAPI-115] [.NET] Add IncOrderSnapshot sample
* [MDAPI-81] [.NET] Add MultipleMarketDepth sample
* [MDAPI-93] [.NET] Add DxFeedMarketDepth sample
* [MDAPI-109] [.NET] Add DxFeedCandleChart API sample
* [MDAPI-107] [.NET] Implement TimeSeriesTxModel
* [MDAPI-106] [.NET] Implement IndexedTxModel
* [MDAPI-92] [.NET] Implement MarketDepthModel
* [MDAPI-66] [.NET] Failed to build solution on Visual Studio 2022

## Version 2.2.0

* [MDAPI-25] [.NET] [IPF] Implement custom fields in InstrumentProfile
* [MDAPI-22] [.NET] CandleWebService API sample

## Version 2.1.0

* [MDAPI-21] [Java] [SDK] NoSuchMethodError exception when creating a monitoring endpoint
* [MDAPI-19] [.NET] [IPF] Allow set Bearer token for authentication

## Version 2.0.2

* Feature: Add DxFeedReconnectSample
* Fix: Schedule memory leak

## Version 2.0.1

* Fix: Exception when closing an app under .NET Framework

## Version 2.0.0

* Build all samples into one directory to reduce the size on disk
* Keep only self-contained builds for DxFeed.Graal.Net.Tools
* Add compatibility with netstandard 2.0
  - BACKWARD-INCOMPATIBLE CHANGE:
  The list of event flags moves from the IIndexedEvent interface to the new EventFlags class.
  - BACKWARD-INCOMPATIBLE CHANGE:
  Method GetEventTypes moves from the IEventType interface to DXEndpoint class.
* Fix copyright header in Utils
* Fix build warnings
* Bump StyleCop.Analyzers
* Fix CodeQL workflow

## Version 1.3.1

* Fix receiving Greeks and TheoPrice via dxLink

## Version 1.3.0

* Bump GraalVM to JDK 22.0.1
* Add OtcMarketsOrder and #pink source
* Add Schedule
* Fix an error when the isolate was not created in the main thread
* Add Custom Marshalers and Graal parsers
* Add TimeFormat, TimePeriod and SymbolParser
* Add GetSymbols and SetSymbols for DXFeedSubscription

## Version 1.2.1

* Improve TimeSeriesEventAsync public API

## Version 1.2.0

* Add TimeSeriesEventAsync

## Version 1.1.0

* Add qds-tools
* Add force-stream options for tools
* Fix sample for dxLink in Readme

## Version 1.0.0

* Reduce memory consumption
* Improve performance
* Fix token-based authorization in dxLink
* Bump DxFeed.Graal.Native.SDK

## Version 0.8.0

* Update README.MD
* Add dependencies and third party license
* Fix DocFX template

## Version 0.7.0

* Change lifetime management for objects created by GraalVM
* Add builds for net7.0 and net8.0

## Version 0.6.0

* Bump DxFeed.Graal.Native.SDK
* Add IpfConnection

## Version 0.5.0

* Add InstrumentProfileReader

## Version 0.4.0

* Fix: Readme and docs

## Version 0.3.0

* Feature: Add Help Tool
* Feature: Add Help articles
* Feature: Add LatencyTest tool
* Fix: CandleSymbol
* Feature: Add Candle Sample
* Fix: Update readme

## Version 0.2.1

* Feature: Add CodeQL analysis CI/CD step
* Feature: Add DocFX generation
* Fix: Update readme
* Feature: Add docs (available at https://dxfeed.github.io/dxfeed-graal-net-api/)

## Version 0.2.0

* Feature: Bump DxFeed.Graal.Native version to 0.3.3
* Feature: Bump QD version to 3.316
* Refactor: Rework event mappers (now we can convert to/from native)
* Feature: Add DXPublisher (now we can publish events)
* Feature: Add WriteTapFile sample
* Feature: Add option tape to DxFeed.Graal.Net.Tools (now we can tape events to file)
* Feature: Add OptionSale market event
* Fix: AnalyticOrder market event parsing
* Feature: Add new field to Profile market event
* Fix: Isolate and IsolateThread now correct attach/detach
* Feature: Add ThreadExitManager for manage IsolateThread
* Feature: Add PlatformUtil to identify the current platform
* Refactor: Rework native handle, now use SafeHandle class
* Feature: Add CmdArgUtils and improve sample (moved argument parsing to a separate class)
* Feature: Add publishing Tools to CI/CD (include self-contained version)
* Fix: ThreadExitManager. Workaround. Some linux distro have "libpthread.so.0" instead of "libpthread.so"
* Feature: Add ConvertTapeFile sample
* Feature: Add DXFeedFileParser sample
* Feature: Add DXFeedSample sample
* BREAKING_CHANGES: Rename DxFeed.Instance method to DxFeed.GetInstance, for more consistency

## Version 0.1.0

* Feature: Add new events type (Candle, Profile, Summary, Greeks, Series, TheoPrice, Underlying)
* Fix: Implement safe dispose for the DxEdnpoint
* Fix: Complete to-do tasks in the Utils namespace
* Fix: Complete to-do tasks in the DxEndpoint class
* Feature: Add unit tests for DxEndpoint
* Feature: Improve TimeFormat utils (no new instances are created for the same format, add added the ability to parse sting)
* Feature: Add new tools to measure performance (PerfTools)
* Feature: Add CandleSymbol (all candle attributes and market event symbols)
* Feature: Add release cycle to CI/CD
* Doc: Improve documentation
